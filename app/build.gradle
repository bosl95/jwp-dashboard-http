plugins {
    id 'application'
    id 'org.sonarqube' version '3.3'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // CORS
    testImplementation 'org.apache.httpcomponents:httpclient'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation "org.mockito:mockito-core:3.+"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

application {
    mainClass = 'nextstep.jwp.JwpApplication'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "woowacourse_be-jwp-http-server"
        property "sonar.organization", "woowacourse"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "jacoco/jacoco.xml"
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination(new File("jacoco/jacoco.xml"))
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}